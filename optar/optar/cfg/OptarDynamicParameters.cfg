#!/usr/bin/env python
PACKAGE = "optar"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("nomarker_position_estimator_pnp_iterations",						double_t,	0, "Number of iterations for opencv's solvePnPRansac method", 10000, 1, 10000000)
gen.add("nomarker_position_estimator_pnp_confidence",						double_t,	0, "Confidence for opencv's solvePnPRansac method",   0.99, 0,   0.9999999)
gen.add("nomarker_position_estimator_pnp_reprojection_error",				double_t,	0, "Reprojection error (=inlier threshold value) used by RANSAC in opencv's solvePnPRansac method",  5, 0, 1000)

gen.add("nomarker_position_estimator_matching_threshold",					double_t,	0, "Feature matching max threshold used for filtering orb matches",  40, 1, 1000)
gen.add("nomarker_position_estimator_reprojection_discard_threshold",		double_t,	0, "If a frame gets a reprojection error over this value it will be discarded",  5, 1, 1000)

gen.add("nomarker_position_estimator_orb_max_points",		int_t,		0, "Max number of keypoints the  algorithm will individuate",  1000, 4, 10000)
gen.add("nomarker_position_estimator_orb_scale_factor",		double_t,	0, "Scale factor used by the ORB algorithm to search for keypoints at different scales",  1.18, 1.0000001, 4)
gen.add("nomarker_position_estimator_orb_levels_number",	int_t,		0, "Number of scale levels observed by the ORB algorithm",  9, 1, 50)


exit(gen.generate(PACKAGE, "optar", "OptarDynamicParameters"))